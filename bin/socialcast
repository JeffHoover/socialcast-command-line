#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'rest_client'

program :version, File.read(File.join(File.dirname(__FILE__), '..', 'VERSION')).strip
program :description, 'command line interface to the socialcast api'

command :share do |c|
  c.syntax = 'socialcast share <message> [options]'
  c.summary = 'share a message'
  c.description = 'post a message into your socialcast stream'
  c.example 'description', 'command example'
  c.option '-u', '--user STRING', String, 'Socialcast account username'
  c.option '--domain STRING', String, 'Socialcast community domain'
  c.action do |args, options|
    message = args.first
    options.user = ask('Socialcast username: ') unless options.user
    options.password = password
    options.domain = ask('Socialcast domain: ') unless options.domain

    # options.default :domain => 'demo.socialcast.local', :user => user, :password => password

    url = ['https://', options.domain, '/api/messages.json'].join
    say "Posting message to: #{url}"
    resource = RestClient::Resource.new url, :user => options.user, :password => options.password, :verify_ssl => OpenSSL::SSL::VERIFY_NONE
    params = {:message => {:body => message}}
    resource.post params do |response|
      say "API response:" if options.trace
      puts response.body if options.trace #FIXME: why doesn't say work here?
    end
    say "Message has been shared" #FIXME: use notify_ok to show growl
  end
end

